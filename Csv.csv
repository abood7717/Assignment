Id,Title,Category,Diagram,Interaction,Priority,State,Changed By,Description,Justification,Last Modified
24,Elevation Using Impersonation,Elevation Of Privilege,Diagram 1,Login / View Data,High,Not Started,,Doctor Dashboard may be able to impersonate the context of Doctor in order to gain additional privilege.,,Generated
22,Weak Access Control for a Resource,Information Disclosure,Diagram 1,Health Record Query,High,Not Started,,Improper data protection of Cloud Database can allow an attacker to read information not intended for disclosure. Review authorization settings.,,Generated
21,Spoofing of Source Data Store Cloud Database,Spoofing,Diagram 1,Health Record Query,High,Not Started,,Cloud Database may be spoofed by an attacker and this may lead to incorrect data delivered to Doctor Dashboard. Consider using a standard authentication mechanism to identify the source data store.,,Generated
20,Potential Excessive Resource Consumption for Doctor Dashboard or Cloud Database,Denial Of Service,Diagram 1,Query Request,High,Not Started,,"Does Doctor Dashboard or Cloud Database take explicit steps to control resource consumption? Resource consumption attacks can be hard to deal with, and there are times that it makes sense to let the OS do the job. Be careful that your resource requests don't deadlock, and that they do timeout.",,Generated
19,Spoofing of Destination Data Store Cloud Database,Spoofing,Diagram 1,Query Request,High,Not Started,,Cloud Database may be spoofed by an attacker and this may lead to data being written to the attacker's target instead of Cloud Database. Consider using a standard authentication mechanism to identify the destination data store.,,Generated
18,Potential Excessive Resource Consumption for IoT Device or Cloud Database,Denial Of Service,Diagram 1,Encrypted Health Data,High,Not Started,,"Does IoT Device or Cloud Database take explicit steps to control resource consumption? Resource consumption attacks can be hard to deal with, and there are times that it makes sense to let the OS do the job. Be careful that your resource requests don't deadlock, and that they do timeout.",,Generated
17,Spoofing of Destination Data Store Cloud Database,Spoofing,Diagram 1,Encrypted Health Data,High,Not Started,,Cloud Database may be spoofed by an attacker and this may lead to data being written to the attacker's target instead of Cloud Database. Consider using a standard authentication mechanism to identify the destination data store.,,Generated
16,Elevation Using Impersonation,Elevation Of Privilege,Diagram 1,Health Input,High,Not Started,,IoT Device may be able to impersonate the context of Patient in order to gain additional privilege.,,Generated
25,Authorization Bypass,Information Disclosure,Diagram 1,Query Request,High,Not Started,,"Can you access Cloud Database and bypass the permissions for the object? For example by editing the files directly with a hex editor, or reaching it via filesharing? Ensure that your program is the only one that can access the data, and that all other subjects have to use your interface.",,Generated
26,Authorization Bypass,Information Disclosure,Diagram 1,Encrypted Health Data,High,Not Started,,"Can you access Cloud Database and bypass the permissions for the object? For example by editing the files directly with a hex editor, or reaching it via filesharing? Ensure that your program is the only one that can access the data, and that all other subjects have to use your interface.",,Generated
27,Weak Credential Storage,Information Disclosure,Diagram 1,Encrypted Health Data,High,Not Started,,"Credentials held at the server are often disclosed or tampered with and credentials stored on the client are often stolen. For server side, consider storing a salted hash of the credentials instead of storing the credentials themselves. If this is not possible due to business requirements, be sure to encrypt the credentials before storage, using an SDL-approved mechanism. For client side, if storing credentials is required, encrypt them and protect the data store in which they're stored",,Generated
28,Weak Credential Storage,Information Disclosure,Diagram 1,Query Request,High,Not Started,,"Credentials held at the server are often disclosed or tampered with and credentials stored on the client are often stolen. For server side, consider storing a salted hash of the credentials instead of storing the credentials themselves. If this is not possible due to business requirements, be sure to encrypt the credentials before storage, using an SDL-approved mechanism. For client side, if storing credentials is required, encrypt them and protect the data store in which they're stored",,Generated
29,Risks from Logging,Tampering,Diagram 1,Encrypted Health Data,High,Not Started,,"Log readers can come under attack via log files. Consider ways to canonicalize data in all logs. Implement a single reader for the logs, if possible, in order to reduce attack surface area. Be sure to understand and document log file elements which come from untrusted sources.",,Generated
30,Lower Trusted Subject Updates Logs,Repudiation,Diagram 1,Encrypted Health Data,High,Not Started,,"If you have trust levels, is anyone other outside of the highest trust level allowed to log? Letting everyone write to your logs can lead to repudiation problems. Only allow trusted code to log.",,Generated
31,Data Logs from an Unknown Source,Repudiation,Diagram 1,Encrypted Health Data,High,Not Started,,Do you accept logs from unknown or weakly authenticated users or systems? Identify and authenticate the source of the logs before accepting them.,,Generated
32,Insufficient Auditing,Repudiation,Diagram 1,Encrypted Health Data,High,Not Started,,Does the log capture enough data to understand what happened in the past? Do your logs capture enough data to understand an incident after the fact? Is such capture lightweight enough to be left on all the time? Do you have enough data to deal with repudiation claims? Make sure you log sufficient and appropriate data to handle a repudiation claims. You might want to talk to an audit expert as well as a privacy expert about your choice of data.,,Generated
33,Potential Weak Protections for Audit Data,Repudiation,Diagram 1,Encrypted Health Data,High,Not Started,,"Consider what happens when the audit mechanism comes under attack, including attempts to destroy the logs, or attack log analysis programs. Ensure access to the log is through a reference monitor, which controls read and write separately. Document what filters, if any, readers can rely on, or writers should expect",,Generated
34,Risks from Logging,Tampering,Diagram 1,Query Request,High,Not Started,,"Log readers can come under attack via log files. Consider ways to canonicalize data in all logs. Implement a single reader for the logs, if possible, in order to reduce attack surface area. Be sure to understand and document log file elements which come from untrusted sources.",,Generated
35,Lower Trusted Subject Updates Logs,Repudiation,Diagram 1,Query Request,High,Not Started,,"If you have trust levels, is anyone other outside of the highest trust level allowed to log? Letting everyone write to your logs can lead to repudiation problems. Only allow trusted code to log.",,Generated
36,Data Logs from an Unknown Source,Repudiation,Diagram 1,Query Request,High,Not Started,,Do you accept logs from unknown or weakly authenticated users or systems? Identify and authenticate the source of the logs before accepting them.,,Generated
37,Insufficient Auditing,Repudiation,Diagram 1,Query Request,High,Not Started,,Does the log capture enough data to understand what happened in the past? Do your logs capture enough data to understand an incident after the fact? Is such capture lightweight enough to be left on all the time? Do you have enough data to deal with repudiation claims? Make sure you log sufficient and appropriate data to handle a repudiation claims. You might want to talk to an audit expert as well as a privacy expert about your choice of data.,,Generated
38,Potential Weak Protections for Audit Data,Repudiation,Diagram 1,Query Request,High,Not Started,,"Consider what happens when the audit mechanism comes under attack, including attempts to destroy the logs, or attack log analysis programs. Ensure access to the log is through a reference monitor, which controls read and write separately. Document what filters, if any, readers can rely on, or writers should expect",,Generated
39,Risks from Logging,Tampering,Diagram 1,Health Record Query,High,Not Started,,"Log readers can come under attack via log files. Consider ways to canonicalize data in all logs. Implement a single reader for the logs, if possible, in order to reduce attack surface area. Be sure to understand and document log file elements which come from untrusted sources.",,Generated
